// <auto-generated />
using System;
using ListaDeTarefas.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListaDeTarefas.Infra.Migrations
{
    [DbContext(typeof(TarefasDbContext))]
    [Migration("20230920220911_Add_ValidadeCodigoAlteracaoSenha")]
    partial class Add_ValidadeCodigoAlteracaoSenha
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ListaDeTarefas.Domain.Models.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nome");

                    b.HasKey("PerfilId");

                    b.ToTable("Perfil", (string)null);
                });

            modelBuilder.Entity("ListaDeTarefas.Domain.Models.Tarefa", b =>
                {
                    b.Property<int>("TarefaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarefaId"));

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime")
                        .HasColumnName("DataEntrega");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Descricao");

                    b.Property<bool>("Finalizada")
                        .HasColumnType("bit")
                        .HasColumnName("Finalizada");

                    b.Property<int>("FkUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("Titulo");

                    b.HasKey("TarefaId");

                    b.HasIndex("FkUsuario");

                    b.ToTable("Tarefa", (string)null);
                });

            modelBuilder.Entity("ListaDeTarefas.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("PerfilId")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ListaDeTarefas.Domain.Models.Tarefa", b =>
                {
                    b.HasOne("ListaDeTarefas.Domain.Models.Usuario", "Usuario")
                        .WithMany("Tarefas")
                        .HasForeignKey("FkUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ListaDeTarefas.Domain.Models.Usuario", b =>
                {
                    b.HasOne("ListaDeTarefas.Domain.Models.Perfil", "Perfil")
                        .WithOne()
                        .HasForeignKey("ListaDeTarefas.Domain.Models.Usuario", "PerfilId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("ListaDeTarefas.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasMaxLength(60)
                                .HasColumnType("varchar")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");

                            b1.OwnsOne("ListaDeTarefas.Domain.ValueObjects.VerificarEmail", "VerificarEmail", b2 =>
                                {
                                    b2.Property<int>("EmailUsuarioId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Codigo")
                                        .IsRequired()
                                        .HasMaxLength(6)
                                        .HasColumnType("varchar")
                                        .HasColumnName("CodigoVerificacaoEmail");

                                    b2.Property<DateTime?>("DataExpiracao")
                                        .HasColumnType("datetime")
                                        .HasColumnName("DataExpiracaoCodigoEmail");

                                    b2.Property<DateTime?>("DataVerificacao")
                                        .HasColumnType("datetime")
                                        .HasColumnName("DataVerificacaoCodigoEmail");

                                    b2.HasKey("EmailUsuarioId");

                                    b2.ToTable("Usuario");

                                    b2.WithOwner()
                                        .HasForeignKey("EmailUsuarioId");
                                });

                            b1.Navigation("VerificarEmail")
                                .IsRequired();
                        });

                    b.OwnsOne("ListaDeTarefas.Domain.ValueObjects.Login", "Login", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("varchar")
                                .HasColumnName("username");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("ListaDeTarefas.Domain.ValueObjects.Senha", "Senha", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("CodigoAlteracao")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("varchar")
                                .HasColumnName("CodigoAlteracaoSenha");

                            b1.Property<DateTime>("DataExpiracao")
                                .HasColumnType("datetime")
                                .HasColumnName("DataExpiracaoCodigoSenha");

                            b1.Property<string>("Password")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar")
                                .HasColumnName("Senha");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Login")
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Senha")
                        .IsRequired();
                });

            modelBuilder.Entity("ListaDeTarefas.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
